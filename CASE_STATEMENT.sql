-- case statement : the case statement in mysql is a condutional expression that allows us to add  
--  IF-THEN-ELSE logiv to SQL querires

use joindb;

create TABLE students(id int not null , name varchar(50) not null, gender CHAR(1) );

INSERT into students 
(id,name,gender)
VALUES
(1,"prashant","M"),
(1,"SONU","F"),
(1,"HARSH","G"),
(1,"ANU","F");

SELECT * FROM STUDENTS;

-- USE CASE STAMENT AND WRITE GENDER IN THE FULL FORM 

SELECT ID,
	NAME,
    GENDER,
    CASE WHEN GENDER = "M" THEN "MALE"
    WHEN GENDER = "F" THEN "FEMALE"
    ELSE "OTHER"
    END AS GENDER_DESC
FROM STUDENTS;


SELECT ID,
	NAME,
    GENDER,
    CASE GENDER WHEN "M" THEN "MALE"
    WHEN "F" THEN "FEMALE"
    ELSE "OTHER"
    END AS GENDER_DESC
    FROM students;
    
    --  BASED ON EACH EMPLOYEES SALARY ASSIGN SALARY STATUS LOW MEDIUM AND HIGH;
    SELECT EMPNO, ENAME, SAL,
    CASE  WHEN SAL<=2000 THEN "LOW"
    WHEN SAL BETWEEN 2000 AND 3000 THEN "MEDIUM"
    WHEN SAL > 3000 THEN "HIGH"
    ELSE "OTHER"
    END AS SALARY_GRADE
    FROM EMP;
    
--  ADD A COLUMN ON INDICATING  IF AN EMPLOYEE IS ELIGIBLE FOR A BONUS BASED ON THEIR JOB , "MANAGER".
SELECT EMPNO, ENAME, SAL, JOB,
	CASE WHEN JOB = "MANAGER" THEN "YES"
	ELSE "NO"
	END AS BONUS
FROM EMP;


-- LABLE EMPLOYEE BASED ON THEIR DEPARTMENT "HQ" FOR DEPTNO = 10 , OTHERWISE "FIELD"
SELECT EMPNO,ENAME, SAL, JOB, DEPTNO,
CASE WHEN DEPTNO = 10 THEN "HQ"
ELSE "FIELD"
END AS LABEL_EMPLOYEE
FROM EMP;

-- ADD COLUMN INDICATING WETHER AN EMPLOYEE HAS A COMMISION (HAS COMMISION, NO COMMISION)
SELECT EMPNO,ENAME, SAL, JOB, COMM,
CASE WHEN COMM IS NOT NULL THEN "HAS COMMISION"
ELSE "NO COMMSION"
END AS COMMISION
FROM EMP;

-- CATEGORIES EMPLOYEE BASED ON THEIR HIRE DATE HIRE < "1985-01-01: THEN SENIOR

SELECT EMPNO, ENAME, SAL, HIREDATE,
	CASE WHEN HIREDATE < "1982-01-01" THEN "SENIOR"
    ELSE "JUNIOR"
    END AS EXPERRIANCE
    FROM EMP;
    
-- SHOW WETHER EMPLOYEE EARN MORE THAN THIER MANGER

SELECT E1.ENAME AS  EMPLOYEE, E2.ENAME AS MANGER,
CASE WHEN E1.SAL >E2.SAL THEN "YES"
ELSE "NO"
END AS EARN_MORE_THAN_MGR
FROM EMP E1
LEFT JOIN EMP E2 
ON E1.MGR = E2.EMPNO;


-- DETERMINE IF A DEPARTMENT IS "ACTIVE" BASED ON HAVING EMPLOYEES

SELECT D.DNAME AS DEPARTMENT,
CASE WHEN EXISTS(SELECT 1 FROM EMP WHERE DEPTNO= D.DEPTNO)
THEN "ACTIVE" 
ELSE "NOT ACTIVE"
END DEPT_STATUS
FROM DEPT D;

-- CTE COMMON TABLE EXPRESION 


-- FIND THE DEPARTMENT WITH AN AVERAGE SALARY GREATER THAN  2000
WITH DEPTSALARY AS (SELECT DEPTNO, AVG(SAL) AS AVG_SALARY 
FROM EMP
GROUP BY DEPTNO)
SELECT DEPTNO FROM  DEPTSALARY
WHERE AVG_SALARY >2000;


-- LIST EMPLOYEES AND THEIR DEPARTMENT NAMES CTE

WITH EMPDEPT AS (
SELECT E.ENAME, D.DNAME,E.SAL FROM EMP E
JOIN DEPT D
ON D.DEPTNO = E.DEPTNO
)
SELECT ENAME, DNAME,SAL  FROM EMPDEPT 
ORDER BY SAL DESC;

-- RANK EMPLOYEE OF SALARY WITH EACH DEPARTMENT

WITH  RANK_EMPLOYEE AS (
SELECT EMPNO, ENAME, SAL,
RANK() OVER(PARTITION BY DEPTNO ORDER BY SAL DESC) AS RNK
FROM EMP)

SELECT EMPNO,ENAME, SAL,RNK FROM RANK_EMPLOYEE;